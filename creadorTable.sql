-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.alumno
(
    id_alumno integer NOT NULL DEFAULT nextval('"Alumno_id_alumno_seq"'::regclass),
    "Nombre" text COLLATE pg_catalog."default",
    "Email" text COLLATE pg_catalog."default",
    id_rama integer,
    id_promocion integer,
    CONSTRAINT alumno_pkey PRIMARY KEY (id_alumno)
);

CREATE TABLE IF NOT EXISTS public.aprobado
(
    id_nota serial NOT NULL,
    id_proyecto integer NOT NULL,
    "Apto" boolean,
    id_alumno integer,
    CONSTRAINT aprobado_pkey PRIMARY KEY (id_nota)
);

CREATE TABLE IF NOT EXISTS public.campus
(
    id_campus serial NOT NULL,
    nombre character varying COLLATE pg_catalog."default",
    id_promocion integer,
    CONSTRAINT campus_pkey PRIMARY KEY (id_campus)
);

CREATE TABLE IF NOT EXISTS public.modalidad
(
    id_modalidad serial NOT NULL,
    "Nombre" text COLLATE pg_catalog."default",
    "Hora_entrada" date,
    "Hora_salida" date,
    CONSTRAINT modalidad_pkey PRIMARY KEY (id_modalidad)
);

CREATE TABLE IF NOT EXISTS public.profesor
(
    id_profesor serial NOT NULL,
    "Nombre" text COLLATE pg_catalog."default",
    "Email" text COLLATE pg_catalog."default",
    "Fecha_inicio_trabajo" date,
    "Fecha_fin" date,
    id_rol integer,
    CONSTRAINT profesor_pkey PRIMARY KEY (id_profesor)
);

CREATE TABLE IF NOT EXISTS public.promocion
(
    "Fecha_inicio" date,
    "Fecha_fin" date,
    "NPromocion" integer,
    id_promocion serial NOT NULL,
    CONSTRAINT promocion_pkey PRIMARY KEY (id_promocion)
);

CREATE TABLE IF NOT EXISTS public.proyecto
(
    id_proyecto serial NOT NULL,
    "Nombre" text COLLATE pg_catalog."default",
    "Descripcion" text COLLATE pg_catalog."default",
    id_rama integer,
    CONSTRAINT proyecto_pkey PRIMARY KEY (id_proyecto)
);

CREATE TABLE IF NOT EXISTS public.rama
(
    id_rama integer NOT NULL DEFAULT nextval('"Rama_id_rama_seq"'::regclass),
    "Nombre" character varying COLLATE pg_catalog."default",
    id_profesor integer,
    id_modalidad integer,
    CONSTRAINT "Rama_pkey" PRIMARY KEY (id_rama)
);

CREATE TABLE IF NOT EXISTS public.rol
(
    id_rol serial NOT NULL,
    "Nombre" text COLLATE pg_catalog."default",
    "Descripcion" text COLLATE pg_catalog."default",
    "Hora_entrada" date,
    "Hora_salida" date,
    CONSTRAINT rol_pkey PRIMARY KEY (id_rol)
);

ALTER TABLE IF EXISTS public.alumno
    ADD CONSTRAINT "FK_id_rama" FOREIGN KEY (id_rama)
    REFERENCES public.rama (id_rama) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_id_rama
    ON public.alumno(id_rama);


ALTER TABLE IF EXISTS public.alumno
    ADD CONSTRAINT fk_alumno FOREIGN KEY (id_promocion)
    REFERENCES public.promocion (id_promocion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.aprobado
    ADD CONSTRAINT fk_id_alumno FOREIGN KEY (id_alumno)
    REFERENCES public.alumno (id_alumno) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.aprobado
    ADD CONSTRAINT id_proyecto FOREIGN KEY (id_proyecto)
    REFERENCES public.proyecto (id_proyecto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.campus
    ADD CONSTRAINT fk_campus FOREIGN KEY (id_campus)
    REFERENCES public.promocion (id_promocion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS campus_pkey
    ON public.campus(id_campus);


ALTER TABLE IF EXISTS public.profesor
    ADD CONSTRAINT "FK_id_rol" FOREIGN KEY (id_rol)
    REFERENCES public.rol (id_rol) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_i
    ON public.profesor(id_rol);


ALTER TABLE IF EXISTS public.proyecto
    ADD CONSTRAINT "FK_id_rama" FOREIGN KEY (id_rama)
    REFERENCES public.rama (id_rama) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.rama
    ADD CONSTRAINT "FK_id_profesor" FOREIGN KEY (id_profesor)
    REFERENCES public.profesor (id_profesor) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_id_profesor
    ON public.rama(id_profesor);


ALTER TABLE IF EXISTS public.rama
    ADD CONSTRAINT "FK_id_rama" FOREIGN KEY (id_modalidad)
    REFERENCES public.modalidad (id_modalidad) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_FK_id_rama"
    ON public.rama(id_modalidad);

END;